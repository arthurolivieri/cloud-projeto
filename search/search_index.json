{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Projeto de Computa\u00e7\u00e3o em Nuvem","text":""},{"location":"#feito-por-arthur-olivieri","title":"Feito por: Arthur Olivieri","text":""},{"location":"#a-proposta-do-projeto","title":"A proposta do projeto:","text":"<p>O projeto do semestre consistiu em criar uma API RESTful para cadastrar e autenticar usu\u00e1rios e expor algum conte\u00fado externo, seja consumindo uma outra API ou fazendo um scraping de alguma p\u00e1gina web. Essa API, em conjunto com o banco de dados PostgreSQL deve ser conteinerizado.</p>"},{"location":"#o-meu-projeto","title":"O meu projeto:","text":"<p>O meu projeto cobre os requisitos da proposta, permitindo cadastrar e autenticar usu\u00e1rios e expondo piadas provenientes de uma API externa.</p>"},{"location":"#links-e-informacoes-rapidas","title":"Links e Informa\u00e7\u00f5es R\u00e1pidas:","text":"<ol> <li> <p>Link para o reposit\u00f3rio do projeto no github</p> </li> <li> <p>Link para o reposit\u00f3rio da imagem no dockerhub</p> </li> <li> <p>Link para o download do compose.yaml</p> </li> <li> <p>Link para o v\u00eddeo de demonstra\u00e7\u00e3o no youtube</p> </li> <li> <p>No reposit\u00f3rio github, o compose.yaml encontra-se na ra\u00edz do projeto.</p> </li> </ol>"},{"location":"#executando-o-conteiner","title":"Executando o cont\u00eainer:","text":"<ol> <li> <p>Tenha o docker instalado no seu computador. Esse tutorial pode te ajudar caso ainda n\u00e3o tenha baixado.</p> </li> <li> <p>Clique aqui para baixar o arquivo compose.yaml. Outra alternativa \u00e9 clonar o reposit\u00f3rio do projeto no github e encontrar o arquivo compose.yaml na ra\u00edz do reposit\u00f3rio.</p> </li> <li> <p>Em um terminal, entre na pasta em que se encontra o arquivo baixado e execute o comando <code>docker compose up -d</code></p> </li> <li> <p>Se tudo ocorreu bem, voc\u00ea pode consumir a API de acordo com os endpoints abaixo no link http://localhost:8000 utilizando um m\u00e9todo de sua prefer\u00eancia. Uma sugest\u00e3o \u00e9 utilizar a pr\u00f3pria documenta\u00e7\u00e3o do FastAPI no link http://localhost:8000/docs, onde \u00e9 poss\u00edvel testar todos os endpoints.</p> </li> </ol>"},{"location":"#testando-e-utilizando-a-api","title":"Testando e utilizando a API:","text":"<p>Para utilizar a API, voc\u00ea deve se registrar como usu\u00e1rio, fazer login, guardar o token obtido no login, e rir da piada exposta utilizando o token no header da requisi\u00e7\u00e3o de acordo com os endpoints a seguir.</p>"},{"location":"#post-register","title":"POST /register","text":"<p>Payload de request - informa\u00e7\u00f5es de registro</p> <pre><code>{\n\"nome\": \"seu-nome\",\n\"email\": \"seu-email\",\n\"senha\": \"sua-senha\"\n}\n</code></pre> <p>Payload de resposta - um token de autentica\u00e7\u00e3o</p> <pre><code>{\n\"jwt\": \"iOiIxMjM0NTY...\",\n}\n</code></pre>"},{"location":"#post-login","title":"POST /login","text":"<p>Payload de request - informa\u00e7\u00f5es de login. Note que nesse momento um registro j\u00e1 deve ter sido feito, ou seja, voc\u00ea deve existir como usu\u00e1rio.</p> <pre><code>{\n\"email\": \"seu-email\",\n\"senha\": \"sua-senha\"\n}\n</code></pre> <p>Payload de resposta - um token de autentica\u00e7\u00e3o</p> <pre><code>{\n\"jwt\": \"iOiIxMjM0NTY...\",\n}\n</code></pre>"},{"location":"#get-consultar","title":"GET /consultar","text":"<p>No header, deve haver o token obtido no login no seguinte formato</p> <pre><code>Authorization: Bearer &lt;JWT&gt;\n</code></pre> <p>Payload de resposta - uma piada no seguinte formato:</p> <pre><code>{\n\"setup\": \"What's the difference between a hot potato and a flying pig?\",\n\"delivery\": \"One's a heated yam, the other's a yeeted ham.\",\n}\n</code></pre>"},{"location":"app-deployment/","title":"Arquivo app-deployment.yaml","text":"<pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: fastapi-app\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: fastapi\n  template:\n    metadata:\n      labels:\n        app: fastapi\n    spec:\n      containers:\n        - name: fastapi\n          image: aolivieri03/cloud-projeto-1:latest\n          ports:\n            - containerPort: 8000\n          env:\n            - name: POSTGRES_DB\n              value: \"projeto\"\n            - name: POSTGRES_USER\n              value: \"projeto\"\n            - name: POSTGRES_PASSWORD\n              value: \"S3cr3t\"\n            - name: POSTGRES_HOST\n              value: \"postgres\"\n            - name: POSTGRES_PORT\n              value: \"5432\"\n            - name: secret_key\n              value: \"27dd6a02a2f7c73c3a7328c81268f6d7f6609f561f6c2bd2bcf230744d52b72d\"\n            - name: algorithm\n              value: \"HS256\"\n            - name: ACCESS_TOKEN_EXPIRE_MINUTES\n              value: \"30\"\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: fastapi-service\nspec:\n  type: LoadBalancer\n  ports:\n    - port: 80\n      targetPort: 8000\n  selector:\n    app: fastapis\n</code></pre>"},{"location":"explicacao/","title":"Implanta\u00e7\u00e3o da aplica\u00e7\u00e3o na AWS com Kubernetes","text":"<p>Esta API foi implantada na AWS utilizando Kubernetes para orquestra\u00e7\u00e3o de containers, garantindo escalabilidade, alta disponibilidade e gerenciamento eficiente dos recursos. Segue explica\u00e7\u00e3o sobre seu funcionamento e configura\u00e7\u00e3o:</p>"},{"location":"explicacao/#1-infraestrutura-com-kubernetes","title":"1. Infraestrutura com Kubernetes","text":"<ul> <li> <p>Cluster Kubernetes (EKS):   Implantou-se a API em um cluster Kubernetes gerenciado pela Amazon Elastic Kubernetes Service \u2013 EKS. Ele gerencia os pods (unidades m\u00ednimas) que cont\u00eam a aplica\u00e7\u00e3o de consulta felia no FastAPI e o banco de dados Postgres.</p> </li> <li> <p>Dois pods:</p> </li> <li>Um pod executa o cont\u00eainer com a aplica\u00e7\u00e3o, gerenciando as requisi\u00e7\u00f5es.</li> <li> <p>Outro pod executa o banco de dados Postgres garantindo a persist\u00eancia dos dados.</p> </li> <li> <p>Configura\u00e7\u00e3o por YAML:   Nos arquivos YAML (<code>app-deployment.yaml</code> e <code>postgres-deployment.yaml</code>) definiu-se os recursos do Kubernetes, incluindo especifica\u00e7\u00f5es de cont\u00eaniners, vari\u00e1veis de ambientes e abertura de portas, para a comunica\u00e7\u00e3o dos servi\u00e7os.</p> </li> </ul>"},{"location":"explicacao/#2-load-balancing","title":"2. Load Balancing","text":"<ul> <li> <p>Load Balancer:   O load balancer faz a distribui\u00e7\u00e3o das requisi\u00e7\u00f5es entre os pods, de modo a garantir balanceamento de carga e constante disponibilidade.</p> </li> <li> <p>Endere\u00e7o de Acesso:   O Load Balancer cria o endere\u00e7o p\u00fablico que permite o acesso \u00e0 API. Toda requisi\u00e7\u00e3o feita no endere\u00e7o vai para o cluster Kubernetes, que encaminha para o pod correto.</p> </li> </ul>"},{"location":"explicacao/#3-vantagens-da-arquitetura","title":"3. Vantagens da Arquitetura","text":"<ul> <li>Escalabilidade: O Kubernetes escala automaticamente os pods, correspondendo \u00e0s necessidades de demanda.</li> <li>Alta Disponibilidade: O uso do Load Balancer \u00e9 uma garantia de que a API permane\u00e7a dispon\u00edvel, mesmo com poss\u00edveis falhas em pods espec\u00edficos.</li> <li>Gerenciamento Eficiente: O Kubernetes torna mais f\u00e1cil e direto o gerenciamento de aplica\u00e7\u00f5es e recursos, possibilitando monitoramento e atualiza\u00e7\u00f5es.</li> </ul>"},{"location":"index2/","title":"Projeto de Computa\u00e7\u00e3o em Nuvem - AWS","text":""},{"location":"index2/#feito-por-arthur-olivieri","title":"Feito por: Arthur Olivieri","text":""},{"location":"index2/#a-proposta-do-projeto","title":"A proposta do projeto:","text":"<p>Nessa etapa do projeto, fizemos o deploy em um cluster EKS (Kubernetes) na AWS da nossa aplica\u00e7\u00e3o criada e dockerizada na primeira etapa.</p>"},{"location":"index2/#o-meu-projeto","title":"O meu projeto:","text":"<p>O meu projeto cobre os requisitos da proposta, permitindo cadastrar e autenticar usu\u00e1rios e expondo piadas provenientes de uma API externa.</p>"},{"location":"index2/#links-e-informacoes-rapidas","title":"Links e Informa\u00e7\u00f5es R\u00e1pidas:","text":"<ol> <li> <p>Link para o reposit\u00f3rio do projeto no github</p> </li> <li> <p>Link para o reposit\u00f3rio da imagem no dockerhub</p> </li> <li> <p>Link para o v\u00eddeo de demonstra\u00e7\u00e3o no youtube</p> </li> <li> <p>Link para o servi\u00e7o de consultas rodando na AWS</p> </li> <li> <p>No reposit\u00f3rio github, os arquivos de configura\u00e7\u00e3o de deploy (<code>app-deployment.yaml</code> e <code>postgres-deployment.yaml</code>) encontram-se na pasta <code>aws-files</code> e, tamb\u00e9m, nas abas da documenta\u00e7\u00e3o.</p> </li> </ol>"},{"location":"index2/#executando-o-servico","title":"Executando o servi\u00e7o:","text":"<p>Como o servi\u00e7o est\u00e1 hospedado na aws, n\u00e3o \u00e9 necess\u00e1ria nenhuma configura\u00e7\u00e3o para consumi-lo. Basta entrar no link http://a27025c21229a4b2081bf6fb37ad3df1-327827612.us-east-2.elb.amazonaws.com/docs e testar da mesma maneira que fez na primeira etapa do projeto. Na parte a seguir, est\u00e3o as diretrizes sobre como testar a API (exatamente da mesma maneira da primeira parte do projeto).</p>"},{"location":"index2/#testando-e-utilizando-a-api","title":"Testando e utilizando a API:","text":"<p>Para utilizar a API, voc\u00ea deve se registrar como usu\u00e1rio, fazer login, guardar o token obtido no login, e rir da piada exposta utilizando o token no header da requisi\u00e7\u00e3o de acordo com os endpoints a seguir.</p>"},{"location":"index2/#post-register","title":"POST /register","text":"<p>Payload de request - informa\u00e7\u00f5es de registro</p> <pre><code>{\n\"nome\": \"seu-nome\",\n\"email\": \"seu-email\",\n\"senha\": \"sua-senha\"\n}\n</code></pre> <p>Payload de resposta - um token de autentica\u00e7\u00e3o</p> <pre><code>{\n\"jwt\": \"iOiIxMjM0NTY...\",\n}\n</code></pre>"},{"location":"index2/#post-login","title":"POST /login","text":"<p>Payload de request - informa\u00e7\u00f5es de login. Note que nesse momento um registro j\u00e1 deve ter sido feito, ou seja, voc\u00ea deve existir como usu\u00e1rio.</p> <pre><code>{\n\"email\": \"seu-email\",\n\"senha\": \"sua-senha\"\n}\n</code></pre> <p>Payload de resposta - um token de autentica\u00e7\u00e3o</p> <pre><code>{\n\"jwt\": \"iOiIxMjM0NTY...\",\n}\n</code></pre>"},{"location":"index2/#get-consultar","title":"GET /consultar","text":"<p>No header, deve haver o token obtido no login no seguinte formato</p> <pre><code>Authorization: Bearer &lt;JWT&gt;\n</code></pre> <p>Payload de resposta - uma piada no seguinte formato:</p> <pre><code>{\n\"setup\": \"What's the difference between a hot potato and a flying pig?\",\n\"delivery\": \"One's a heated yam, the other's a yeeted ham.\",\n}\n</code></pre>"},{"location":"postgres-deployment/","title":"Arquivo postgres-deployment.yaml","text":"<pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: postgres\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: postgres\n  template:\n    metadata:\n      labels:\n        app: postgres\n    spec:\n      containers:\n        - name: postgres\n          image: postgres:17\n          ports:\n            - containerPort: 5432\n          env:\n            - name: POSTGRES_DB\n              value: \"projeto\"\n            - name: POSTGRES_USER\n              value: \"projeto\"\n            - name: POSTGRES_PASSWORD\n              value: \"S3cr3t\"\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: postgres\nspec:\n  selector:\n    app: postgres\n  ports:\n    - protocol: TCP\n      port: 5432\n      targetPort: 5432\n</code></pre>"},{"location":"testes/","title":"Prints dos testes da API","text":"<p>Os prints dos testes da API foram feitos utilizando a documenta\u00e7\u00e3o criada pela pr\u00f3pria FastAPI no Swagger.</p>"},{"location":"testes/#post-register","title":"POST /register","text":""},{"location":"testes/#post-login-sem-erro","title":"POST /login - sem erro","text":""},{"location":"testes/#post-login-com-email-errado","title":"POST /login - com email errado","text":""},{"location":"testes/#post-login-com-senha-errada","title":"POST /login - com senha errada","text":""},{"location":"testes/#autenticacao-no-swagger","title":"Autentica\u00e7\u00e3o no Swagger","text":""},{"location":"testes/#get-consultar-sem-erro","title":"GET /consultar - sem erro","text":""},{"location":"testes/#get-consultar-sem-token-no-header","title":"GET /consultar - sem token no header","text":""},{"location":"video/","title":"V\u00eddeo do funcionamento da API","text":"<p>Link para o v\u00eddeo no youtube</p>"},{"location":"video2/","title":"V\u00eddeo do funcionamento da API","text":"<p>Link para o v\u00eddeo no youtube</p>"}]}